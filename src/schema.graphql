type Query {
          users(query:String):[User!]!,
          posts(query:String):[Post!]!,
          me:User!,
          comments(query:String):[Comment!]!
      }

      type Mutation{
          createUser(data: CreateUserInput):User!,
          deleteUser(id:ID!):User!,
          updateUser(id:ID!,data:UpdateUserInput!):User!,
          createPost(data:CreatePostInput):Post!,
          updatePost(id:ID!,data:UpdatePostInput!):Post!,
          createComment(data:CreateCommentInput):Comment!,
          updateComment(id:ID!,data:UpdateCommentInput!):Comment!,
          deletePost(id:ID!):Post!,
          deleteComment(id:ID!):Comment!
      }

      input CreateUserInput {
          name:String!,
          email:String!,
          age:Float
      }
      input UpdateUserInput {
          name:String,
          email:String,
          age:Float
      }

      input CreatePostInput {
        title:String!,
        body: String!,
        published:Boolean!,
        author:ID!
      }
      input UpdatePostInput {
        title:String,
        body: String,
        published:Boolean,
      }

      input CreateCommentInput {
        text:String!,
        post:ID!,
        author:ID!
      }

      input UpdateCommentInput {
        text:String,
      }

      type User {
          id:ID!,
          name:String!,
          email:String!,
          age:Int,
          posts:[Post!]!,
          comments:[Comment!]!
      }
      type Post {
          id:ID!,
          title: String!,
          body: String!,
          published: Boolean!,
          author:User!,
          comments:[Comment!]!
      }
      type Comment {
          id:ID!,
          text:String!,
          author:User!,
          post:Post
      }